name: CI
on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: code
        path: ./source

  Tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Download Artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: code

    - name: Install Requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests (PyTest)
      run: pytest

  Safety:
    name: Safety Check
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Download Artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: code

    - name: Install Requirements
      run: |
        python -m pip install --upgrade pip
        pip install safety
        pip install -r requirements.txt

    - name: Safety Check
      run: safety check

  Bandit:
    name: Bandit Code Vulnerability Check
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v1

    - name: Download Artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: code

    - name: Install Requirements
      run: |
        python -m pip install --upgrade pip
        pip install bandit
        pip install -r requirements.txt

    - name: Bandit Code Vulnerability Check (Excluding Unit Tests)
      run: bandit -r . -x ./test/
